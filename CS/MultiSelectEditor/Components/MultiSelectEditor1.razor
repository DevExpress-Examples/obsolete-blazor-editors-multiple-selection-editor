<div style="width:250px">
    <DxTextBox Text="@Value"
               ReadOnly="true"
               SizeMode="SizeMode.Large"
               @onclick="@(() => { SelectedItems = Value.Split(ValueSeparator).Where(x => !string.IsNullOrWhiteSpace(x)).ToList(); PopupVisible = true; })" />
</div>

<DxPopup @bind-Visible="@PopupVisible" 
         HeaderText="Header" 
         CloseButtonClick="@(() => PopupVisible = false)">
    <HeaderTemplate>
        <div class="container padding-top-15">
            <div class="row">
                <div class="col-sm">
                    <a class="oi oi-check" href="javascript:;" @onclick="@(() => { Value = String.Join(ValueSeparator, SelectedItems); PopupVisible = false; })"></a>
                </div>
                <div class="col-sm">
                    <span>Select items</span>
                </div>
                <div class="col-sm">
                    <a class="oi oi-x float-right" href="javascript:;" @onclick="@(() => { SelectedItems = Value.Split(ValueSeparator).Where(x => !string.IsNullOrWhiteSpace(x)).ToList(); PopupVisible = false; })"></a>
                </div>
            </div>
        </div>
    </HeaderTemplate>
    <ChildContent>
        <DxListBox Data="@Items" 
                   ShowCheckboxes="true" 
                   SelectionMode="ListBoxSelectionMode.Multiple"
                   @bind-Values="@SelectedItems">
        </DxListBox>
    </ChildContent>
</DxPopup>

@code {
    [Parameter]
    public string? Value { get; set; }
    [Parameter]
    public string? ValueSeparator { get; set; }
    [Parameter]
    public List<string>? Items { get; set; }
    private bool PopupVisible { get; set; }
    private IEnumerable<string>? SelectedItems { get; set; }
}
